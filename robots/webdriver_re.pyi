from abc import ABC
from selenium.webdriver import Chrome
from selenium.webdriver.common.alert import Alert as Alert
from selenium.webdriver.remote.webelement import WebElement as WebElement
from typing import List, Optional, Tuple


class WebDriverRe(ABC):
    driver: Optional[Chrome]

    def __init__(self) -> None: ...

    def start_get(self, url: str): ...

    def driver_get(self, url: str): ...

    def kill_driver(self) -> None: ...

    def wait_ele_click_xpath_safe(self, xpath: str, timeout: int = ...): ...

    def wait_ele_xpath_safe(self, xpath: str, timeout: int = ...) -> bool: ...

    def wait_click_xpath(self, xpath: str, timeout: int = ...): ...

    def find_ele_click_xpath(self, xpath: str): ...

    def send_keys_by_xpath(self, xpath: str, keys: str): ...

    def find_elements_by_xpath(self, xpath: str) -> list: ...

    def click_to_last_window_xpath(self, xpath: str): ...

    def get_ele_text(self, xpath: str) -> str: ...

    def input_clear_xpath(self, xpath: str): ...

    def switch_last_window(self) -> None: ...

    def refresh(self) -> None: ...

    def find_ele_xpath_safe(self, xpath: str) -> bool: ...

    def find_ele_xpath(self, xpath: str): ...

    def close_window(self) -> None: ...

    def wait_ele_by_xpath(self, xpath, timeout: int = ...) -> None: ...

    def switch_default_windows(self) -> None: ...

    def wait_find_by_xpath(self, xpath, timeout: int = ...) -> WebElement: ...

    def wait_elements_by_xpath(self, xpath: str, timeout: int = ...) -> List[WebElement]: ...

    def scroll_to_element_safe(self, ele: WebElement): ...

    def execute_script(self, **kwargs) -> None: ...

    def slide_to_right(self) -> None: ...

    def wait_frame_by_xpath(self, xpath: str, timeout: int = ..., must: bool = ...): ...

    def wait_frame_by_id(self, frame_id: str, timeout: int = ..., must: bool = ...): ...

    def switch_default_content(self) -> None: ...

    def switch_default(self) -> None: ...

    def wait_click_xpath_open_window(self, xpath: str, timeout: int = ...): ...

    def get_attribute_by_xpath(self, xpath: str, attribute: str) -> str: ...

    def wait_alert_handle(self, timeout: int = ..., must: bool = ..., accept: bool = ...): ...

    def get_alert_text(self, timeout: int = ..., must: bool = ...) -> Tuple[Optional[Alert], str]: ...

    def screenshot_full_png(self, name: str) -> str: ...

    def find_ele_screenshot(self, xpath: str, name: str) -> str: ...

    def wait_ele_disappear_by_xpath(self, xpath: str, timeout: int = ...): ...
